import langid


class Tokenizer:
    def __init__(self) -> None:
        pass

# ------------------------ Space ----------------------------------------
    @staticmethod  
    def _encode_space(text: str):
        space_text = ' '.join(char for char in list(text))            
        return space_text
    
    @staticmethod
    def _decode_space(space_text: str):
        text = ''.join(char for char in list(space_text))            
        return text

# ------------------------ Unicode ----------------------------------------
    @staticmethod  
    def _encode_unicode(text: str):
        lang, _ = langid.classify(text.lower())
        unicode_text = None
        if lang == 'en':
            unicode_text = ''.join(f'\\u{ord(char):04x}' for char in text)
        else:
            unicode_text = text.encode('unicode_escape').decode('ascii')            
        return unicode_text
    
    @staticmethod
    def _decode_unicode(unicode_text: str):
        return unicode_text.encode('ascii').decode('unicode_escape')

# ------------------------ Circled ----------------------------------------
    @staticmethod
    def _encode_circled(text: str) -> str:
        """Функция для преобразования символов в кружковые версии"""
        latin_map = {
            'a': '🅐', 'b': '🅑', 'c': '🅒', 'd': '🅓', 'e': '🅔',
            'f': '🅕', 'g': '🅖', 'h': '🅗', 'i': '🅘', 'j': '🅙',
            'k': '🅚', 'l': '🅛', 'm': '🅜', 'n': '🅝', 'o': '🅞',
            'p': '🅟', 'q': '🅠', 'r': '🅡', 's': '🅢', 't': '🅣',
            'u': '🅤', 'v': '🅥', 'w': '🅦', 'x': '🅧', 'y': '🅨',
            'z': '🅩',
            'A': '🅐', 'B': '🅑', 'C': '🅒', 'D': '🅓', 'E': '🅔',
            'F': '🅕', 'G': '🅖', 'H': '🅗', 'I': '🅘', 'J': '🅙',
            'K': '🅚', 'L': '🅛', 'M': '🅜', 'N': '🅝', 'O': '🅞',
            'P': '🅟', 'Q': '🅠', 'R': '🅡', 'S': '🅢', 'T': '🅣',
            'U': '🅤', 'V': '🅥', 'W': '🅦', 'X': '🅧', 'Y': '🅨',
            'Z': '🅩'
        }

        cyrillic_map = {
            'а': 'ⓐ', 'б': 'ⓑ', 'в': 'ⓒ', 'г': 'ⓖ', 'д': 'ⓓ',
            'е': 'ⓔ', 'ё': 'ⓔ', 'ж': 'ⓙ', 'з': 'ⓩ', 'и': 'ⓘ',
            'й': 'ⓘ', 'к': 'ⓚ', 'л': 'ⓛ', 'м': 'ⓜ', 'н': 'ⓝ',
            'о': 'ⓞ', 'п': 'ⓟ', 'р': 'ⓡ', 'с': 'ⓒ', 'т': 'ⓣ',
            'у': 'ⓤ', 'ф': 'ⓕ', 'х': 'ⓧ', 'ц': 'ⓒ', 'ч': 'ⓗ',
            'ш': 'ⓢ', 'щ': 'ⓢ', 'ъ': 'ⓠ', 'ы': 'ⓨ', 'ь': 'ⓑ',
            'э': 'ⓔ', 'ю': 'ⓤ', 'я': 'ⓐ',
            'А': 'Ⓐ', 'Б': 'Ⓑ', 'В': 'Ⓒ', 'Г': 'Ⓖ', 'Д': 'Ⓓ',
            'Е': 'Ⓔ', 'Ё': 'Ⓔ', 'Ж': 'Ⓙ', 'З': 'Ⓩ', 'И': 'Ⓘ',
            'Й': 'Ⓘ', 'К': 'Ⓚ', 'Л': 'Ⓛ', 'М': 'Ⓜ', 'Н': 'Ⓝ',
            'О': 'Ⓞ', 'П': 'Ⓟ', 'Р': 'Ⓡ', 'С': 'Ⓒ', 'Т': 'Ⓣ',
            'У': 'Ⓤ', 'Ф': 'Ⓕ', 'Х': 'Ⓧ', 'Ц': 'Ⓒ', 'Ч': 'Ⓗ',
            'Ш': 'Ⓢ', 'Щ': 'Ⓢ', 'Ъ': 'Ⓠ', 'Ы': 'Ⓨ', 'Ь': 'Ⓑ',
            'Э': 'Ⓔ', 'Ю': 'Ⓤ', 'Я': 'Ⓐ'
        }

        return ''.join([
            latin_map.get(c, cyrillic_map.get(c, c)) 
            for c in str(text)
        ])

    @staticmethod
    def _decode_circled(text: str) -> str:
        """Функция для преобразования кружковых символов обратно в обычные"""
        reversed_latin_map = {
            '🅐': 'a', '🅑': 'b', '🅒': 'c', '🅓': 'd', '🅔': 'e',
            '🅕': 'f', '🅖': 'g', '🅗': 'h', '🅘': 'i', '🅙': 'j',
            '🅚': 'k', '🅛': 'l', '🅜': 'm', '🅝': 'n', '🅞': 'o',
            '🅟': 'p', '🅠': 'q', '🅡': 'r', '🅢': 's', '🅣': 't',
            '🅤': 'u', '🅥': 'v', '🅦': 'w', '🅧': 'x', '🅨': 'y',
            '🅩': 'z'
        }

        reversed_cyrillic_map = {
            'ⓐ': 'а', 'ⓑ': 'б', 'ⓒ': 'в', 'ⓖ': 'г', 'ⓓ': 'д',
            'ⓔ': 'е', 'ⓙ': 'ж', 'ⓩ': 'з', 'ⓘ': 'и',
            'ⓚ': 'к', 'ⓛ': 'л', 'ⓜ': 'м', 'ⓝ': 'н',
            'ⓞ': 'о', 'ⓟ': 'п', 'ⓡ': 'р', 'ⓣ': 'т',
            'ⓤ': 'у', 'ⓕ': 'ф', 'ⓧ': 'х', 'ⓗ': 'ч',
            'ⓢ': 'ш', 'ⓠ': 'ъ', 'ⓨ': 'ы', 'ⓑ': 'ь',
            'Ⓤ': 'ю',
            'Ⓐ': 'А', 'Ⓑ': 'Б', 'Ⓒ': 'В', 'Ⓖ': 'Г',
            'Ⓓ': 'Д', 'Ⓔ': 'Е', 'Ⓙ': 'Ж', 'Ⓩ': 'З',
            'Ⓘ': 'И', 'Ⓚ': 'К', 'Ⓛ': 'Л', 'Ⓜ': 'М',
            'Ⓝ': 'Н', 'Ⓞ': 'О', 'Ⓟ': 'П', 'Ⓡ': 'Р',
            'Ⓣ': 'Т', 'Ⓤ': 'У', 'Ⓕ': 'Ф', 'Ⓧ': 'Х',
            'Ⓗ': 'Ч', 'Ⓢ': 'Ш', 'Ⓠ': 'Ъ', 'Ⓨ': 'Ы',
            'Ⓑ': 'Ь', 'Ⓤ': 'Ю', 'Ⓐ': 'Я'
        }

        reversed_map = {**reversed_latin_map, **reversed_cyrillic_map}
        
        return ''.join([
            reversed_map.get(c, c)
            for c in text
        ])
